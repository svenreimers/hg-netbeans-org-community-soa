/*
 * ProcedureResultsetDialog.java
 *
 * Created on August 22, 2008, 2:20 PM
 */
package org.netbeans.modules.jdbcwizard.wizards;

import java.awt.Dialog;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import org.netbeans.modules.jdbcwizard.builder.DBMetaData;
import org.netbeans.modules.jdbcwizard.builder.Procedure;
import org.netbeans.modules.jdbcwizard.builder.ResultSetColumns;
import org.netbeans.modules.jdbcwizard.builder.ResultSetColumn;

/**
 *
 * @author  pponnala
 */
public class ProcedureResultsetDialog extends javax.swing.JDialog {

    private DefaultTableModel resultsetDetailsModel;
    private DefaultListModel resultsetNamesModel;
    private StoredProceduresPanel caller;
    private DBMetaData dbMeta;
    private Procedure currentProc;
    private ArrayList<ResultSetColumns> resultsetList; //contains list of ResultsetColumn


    /** Creates new form ProcedureResultsetDialog */
    public ProcedureResultsetDialog(Dialog parent, boolean modal) {
        super(parent, modal);
        resultsetDetailsModel = new DefaultTableModel(new Object[]{"Index", "Original Name", "Column Name", "Type"}, 0);
        resultsetList = new ArrayList();
        resultsetNamesModel = new DefaultListModel();
        initComponents();
    }

    void setCaller(StoredProceduresPanel aThis) {
        this.caller = aThis;
    }

    void setMetaDataObject(DBMetaData dbMeta) {
        this.dbMeta = dbMeta;
    }

    void setResultsetColumnsList(ArrayList<ResultSetColumns> resultSetColumns) {
        this.resultsetList = resultSetColumns;
        addResultsetNamesToList();
        this.listResultsetNames.setSelectedIndex(0);
        createTableModelFromRSColumns();
    }

    void setSelectedProc(Procedure p) {
        this.currentProc = p;
    }

    private void addResultsetNamesToList() {
        for (ResultSetColumns rs : resultsetList) {
            resultsetNamesModel.addElement(rs.getName());
        }
    }

    /**
     *  Create a default table model from the ResultSetColumns object
     *  @param rsCols Object of ResultSetColumns class
     *  @return DefaultTableModel object
     */
    private void createTableModelFromRSColumns() {

        if (this.listResultsetNames.getSelectedIndex() >= 0) {
            resetRSDetailsModel();
            ResultSetColumns rs = resultsetList.get(this.listResultsetNames.getSelectedIndex());
            ArrayList rsColList = rs.getColumns();
            Iterator rsColListIter = rsColList.iterator();

            // iterate through the arraylist containing resultsetcolumn objects
            // and retrieve the resultset metadata, then display in the table
            while (rsColListIter.hasNext()) {
                ResultSetColumn rsCol = (ResultSetColumn) rsColListIter.next();
                Integer index = new Integer(rsCol.getOrdinalPosition());
                String originalName = rsCol.getName();
                String columnName = rsCol.getLabel();
                String sqlType = rsCol.getSqlType();
                // add a row to the table model, with the data just retrieved
                resultsetDetailsModel.addRow(new Object[]{index, originalName, columnName, sqlType});
            }

        }
    //return model;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listResultsetNames = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultsetDetails = new javax.swing.JTable();
        lblResultsetName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        listResultsetNames.setModel(resultsetNamesModel);
        listResultsetNames.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listResultsetNames.setToolTipText(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.listResultsetNames.toolTipText")); // NOI18N
        listResultsetNames.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listResultsetNamesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listResultsetNames);
        listResultsetNames.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.listResultsetNames.AccessibleContext.accessibleName")); // NOI18N
        listResultsetNames.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.listResultsetNames.AccessibleContext.accessibleDescription")); // NOI18N

        tblResultsetDetails.setModel(resultsetDetailsModel);
        tblResultsetDetails.setToolTipText(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.tblResultsetDetails.toolTipText")); // NOI18N
        jScrollPane2.setViewportView(tblResultsetDetails);
        tblResultsetDetails.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.tblResultsetDetails.AccessibleContext.accessibleName")); // NOI18N
        tblResultsetDetails.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.tblResultsetDetails.AccessibleContext.accessibleDescription")); // NOI18N

        lblResultsetName.setFont(lblResultsetName.getFont().deriveFont(lblResultsetName.getFont().getStyle() | java.awt.Font.BOLD, lblResultsetName.getFont().getSize()+1));
        lblResultsetName.setLabelFor(listResultsetNames);
        org.openide.awt.Mnemonics.setLocalizedText(lblResultsetName, org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.lblResultsetName.text")); // NOI18N
        lblResultsetName.setToolTipText(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.lblResultsetName.toolTipText")); // NOI18N

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() | java.awt.Font.BOLD, jLabel2.getFont().getSize()+1));
        jLabel2.setLabelFor(tblResultsetDetails);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnOK, org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnOK.text")); // NOI18N
        btnOK.setToolTipText(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnOK.toolTipText")); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnCancel, org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnCancel.text")); // NOI18N
        btnCancel.setToolTipText(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnCancel.toolTipText")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblResultsetName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 131, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 345, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 359, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .add(btnOK)
                .add(197, 197, 197)
                .add(btnCancel)
                .add(217, 217, 217))
        );

        layout.linkSize(new java.awt.Component[] {btnCancel, btnOK}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(57, 57, 57)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblResultsetName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 69, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnOK)
                    .add(btnCancel))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {jLabel2, lblResultsetName}, org.jdesktop.layout.GroupLayout.VERTICAL);

        layout.linkSize(new java.awt.Component[] {btnCancel, btnOK}, org.jdesktop.layout.GroupLayout.VERTICAL);

        btnOK.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnOK.AccessibleContext.accessibleName")); // NOI18N
        btnOK.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnOK.AccessibleContext.accessibleDescription")); // NOI18N
        btnCancel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnCancel.AccessibleContext.accessibleName")); // NOI18N
        btnCancel.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ProcedureResultsetDialog.class, "ProcedureResultsetDialog.btnCancel.AccessibleContext.accessibleDescription")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
// TODO add your handling code here:
    this.dispose();
    this.setVisible(false);
    resetRSNamesModel();
    resetRSDetailsModel();

}//GEN-LAST:event_btnOKActionPerformed

    private void resetRSNamesModel() {
        resultsetNamesModel.clear();
    }

    private void resetRSDetailsModel() {
        if (resultsetDetailsModel != null) {
            while (resultsetDetailsModel.getRowCount() > 0) {
                resultsetDetailsModel.removeRow(0);
            }
        }
    }

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    this.dispose();
    this.setVisible(false);
    resetRSNamesModel();
    resetRSDetailsModel();
}//GEN-LAST:event_btnCancelActionPerformed

private void listResultsetNamesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listResultsetNamesValueChanged
    createTableModelFromRSColumns();
}//GEN-LAST:event_listResultsetNamesValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblResultsetName;
    private javax.swing.JList listResultsetNames;
    private javax.swing.JTable tblResultsetDetails;
    // End of variables declaration//GEN-END:variables
}
