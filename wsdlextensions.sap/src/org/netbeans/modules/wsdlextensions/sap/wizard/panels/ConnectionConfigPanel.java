/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConnectionPanel.java
 *
 * Created on Oct 7, 2009, 5:46:18 PM
 */

package org.netbeans.modules.wsdlextensions.sap.wizard.panels;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ProgressMonitor;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.netbeans.modules.wsdlextensions.sap.model.SapConnection;
import org.netbeans.modules.wsdlextensions.sap.util.BORClient;

/**
 *
 * @author jqian
 */
public class ConnectionConfigPanel extends javax.swing.JPanel
        implements DocumentListener {

    List<String> exisitingConnectionNames;

    /** Creates new form ConnectionPanel */
    public ConnectionConfigPanel() {
        initComponents();

        _tfConnectionName.getDocument().addDocumentListener(this);
        _tfSystemID.getDocument().addDocumentListener(this);
        _tfAppServer.getDocument().addDocumentListener(this);
        _tfSystemNumber.getDocument().addDocumentListener(this);
        _tfRouter.getDocument().addDocumentListener(this);
        _tfClientNumber.getDocument().addDocumentListener(this);
        _tfUserName.getDocument().addDocumentListener(this);
        _pfPassword.getDocument().addDocumentListener(this);
    }

    public void setExistingConnectionNames(List<String> exisitingConnectionNames) {
        this.exisitingConnectionNames = exisitingConnectionNames;
    }

    public void setConnection(SapConnection connection) {
        _tfConnectionName.setText(connection.getName());
        _tfSystemID.setText(connection.getSystemID());
        _tfAppServer.setText(connection.getApplicationServer());
        _tfSystemNumber.setText(connection.getSystemNumber());
        _tfRouter.setText(connection.getRouter());
        _cbLanguage.setSelectedItem(connection.getLanguage());
        _tfClientNumber.setText(connection.getClientNumber());
        _tfUserName.setText(connection.getUserName());
        _pfPassword.setText(connection.getPassword());
    }

    public SapConnection getConnection() {
        SapConnection connection = new SapConnection();

        connection.setName(_tfConnectionName.getText().trim());
        connection.setSystemID(_tfSystemID.getText().trim());
        connection.setApplicationServer(_tfAppServer.getText().trim());
        connection.setSystemNumber(_tfSystemNumber.getText().trim());
        connection.setRouter(_tfRouter.getText().trim());
        connection.setLanguage((String) _cbLanguage.getSelectedItem());
        connection.setClientNumber(_tfClientNumber.getText().trim());
        connection.setUserName(_tfUserName.getText().trim());
        connection.setPassword(_pfPassword.getText().trim());

        return connection;
    }

    public boolean validateContent() {
        String errMsg = null;

        String enterValidValueFor = "Please enter a valid value for ";

        SapConnection connection = getConnection();

        if (exisitingConnectionNames.contains(connection.getName())) {
            errMsg = "Connection \"" + connection.getName() +
                    "\" already exists. Use a different name.";
        } else if (connection.getName().length() == 0) {
            errMsg = enterValidValueFor + "connection name";
        } else if (connection.getSystemID().length() == 0) {
            errMsg = enterValidValueFor + "system ID";
        } else if (connection.getApplicationServer().length() == 0) {
            errMsg = enterValidValueFor + "application server";
        } else if (connection.getSystemNumber().length() == 0) {
            errMsg = enterValidValueFor + "system number";
        } else if (connection.getClientNumber().length() == 0) {
            errMsg = enterValidValueFor + "client number";
        } else if (connection.getUserName().length() == 0) {
            errMsg = enterValidValueFor + "user name";
        } else if (connection.getPassword().length() == 0) {
            errMsg = enterValidValueFor + "password";
        }

        if (errMsg == null) {
            return true;
        } else {
            JOptionPane.showMessageDialog(null, errMsg,
                    "Missing Mandatory Property Value",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _bgObjectType = new javax.swing.ButtonGroup();
        _lblSystemParams = new javax.swing.JLabel();
        _lblSystemID = new javax.swing.JLabel();
        _tfSystemID = new javax.swing.JTextField();
        _lblAppServer = new javax.swing.JLabel();
        _tfAppServer = new javax.swing.JTextField();
        _lblSystemNumber = new javax.swing.JLabel();
        _tfSystemNumber = new javax.swing.JTextField();
        _lblRouter = new javax.swing.JLabel();
        _tfRouter = new javax.swing.JTextField();
        _lblLanguage = new javax.swing.JLabel();
        _cbLanguage = new javax.swing.JComboBox();
        _lblLogonParams = new javax.swing.JLabel();
        _lblClientNumber = new javax.swing.JLabel();
        _tfClientNumber = new javax.swing.JTextField();
        _lblUserName = new javax.swing.JLabel();
        _tfUserName = new javax.swing.JTextField();
        _lblPassword = new javax.swing.JLabel();
        _pfPassword = new javax.swing.JPasswordField();
        _btnTestConnection = new javax.swing.JButton();
        _spTestConnection = new javax.swing.JScrollPane();
        _taTestConnection = new javax.swing.JTextArea();
        _lblConnectionName = new javax.swing.JLabel();
        _tfConnectionName = new javax.swing.JTextField();

        _lblSystemParams.setText("<html><b>SAP R/3 System Parameters:</b></html>");

        _lblSystemID.setDisplayedMnemonic('I');
        _lblSystemID.setText("System ID:");

        _lblAppServer.setDisplayedMnemonic('A');
        _lblAppServer.setText("Application Server:");

        _lblSystemNumber.setDisplayedMnemonic('y');
        _lblSystemNumber.setText("System Number:");

        _lblRouter.setDisplayedMnemonic('R');
        _lblRouter.setText("SAP Router String:");

        _lblLanguage.setDisplayedMnemonic('L');
        _lblLanguage.setText("Language:");

        _cbLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EN" }));

        _lblLogonParams.setText("<html><b>SAP R/3 Logon Parameters:</b></html>");

        _lblClientNumber.setDisplayedMnemonic('m');
        _lblClientNumber.setText("Client Number:");

        _lblUserName.setDisplayedMnemonic('U');
        _lblUserName.setText("User Name:");

        _lblPassword.setDisplayedMnemonic('w');
        _lblPassword.setText("Password:");

        _btnTestConnection.setMnemonic('T');
        _btnTestConnection.setText("Test Connection");
        _btnTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _btnTestConnectionActionPerformed(evt);
            }
        });

        _taTestConnection.setColumns(20);
        _taTestConnection.setRows(5);
        _spTestConnection.setViewportView(_taTestConnection);

        _lblConnectionName.setDisplayedMnemonic('C');
        _lblConnectionName.setText("Connection Name:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(_lblSystemID)
                                    .add(_lblAppServer)
                                    .add(_lblSystemNumber)
                                    .add(_lblRouter)
                                    .add(_lblLanguage)
                                    .add(_lblClientNumber)
                                    .add(_lblUserName)
                                    .add(_lblPassword)))
                            .add(layout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(_lblConnectionName)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(_tfConnectionName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_tfSystemID, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_tfAppServer, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_tfSystemNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_tfRouter, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_cbLanguage, 0, 426, Short.MAX_VALUE)
                            .add(_tfClientNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_tfUserName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .add(_pfPassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(_lblLogonParams))
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(_lblSystemParams))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(_btnTestConnection))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(_spTestConnection, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(11, 11, 11)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblConnectionName)
                    .add(_tfConnectionName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(_lblSystemParams)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblSystemID)
                    .add(_tfSystemID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblAppServer)
                    .add(_tfAppServer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblSystemNumber)
                    .add(_tfSystemNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblRouter)
                    .add(_tfRouter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblLanguage)
                    .add(_cbLanguage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(_lblLogonParams)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblClientNumber)
                    .add(_tfClientNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblUserName)
                    .add(_tfUserName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(_lblPassword)
                    .add(_pfPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 45, Short.MAX_VALUE)
                .add(_btnTestConnection)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(_spTestConnection, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void _btnTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__btnTestConnectionActionPerformed
        
        if (validateContent()) {
            _taTestConnection.setText(null);

            final SapConnection connection = getConnection();
            final ProgressMonitor progressMonitor =
                    new ProgressMonitor(this, "Connecting",
                                      "Connecting to " + connection.getName() + "...",
                                      0, 100);

//            progressMonitor.setIndeterminate(true);
//            progressMonitor.setCancellable(true);
            new Thread() {
                @Override
                public void run() {
                    //progressMonitor.display(); // can't be invoked from AWT thread

                    try {
                        new BORClient(connection);
                        _taTestConnection.setText("Test connection successful.");
                    } catch (Exception ex) {
                        _taTestConnection.setText(ex.getMessage());
                    } finally {
                        progressMonitor.close();
                    }
                }
            }.start();
        }
    }//GEN-LAST:event__btnTestConnectionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup _bgObjectType;
    private javax.swing.JButton _btnTestConnection;
    private javax.swing.JComboBox _cbLanguage;
    private javax.swing.JLabel _lblAppServer;
    private javax.swing.JLabel _lblClientNumber;
    private javax.swing.JLabel _lblConnectionName;
    private javax.swing.JLabel _lblLanguage;
    private javax.swing.JLabel _lblLogonParams;
    private javax.swing.JLabel _lblPassword;
    private javax.swing.JLabel _lblRouter;
    private javax.swing.JLabel _lblSystemID;
    private javax.swing.JLabel _lblSystemNumber;
    private javax.swing.JLabel _lblSystemParams;
    private javax.swing.JLabel _lblUserName;
    private javax.swing.JPasswordField _pfPassword;
    private javax.swing.JScrollPane _spTestConnection;
    private javax.swing.JTextArea _taTestConnection;
    private javax.swing.JTextField _tfAppServer;
    private javax.swing.JTextField _tfClientNumber;
    private javax.swing.JTextField _tfConnectionName;
    private javax.swing.JTextField _tfRouter;
    private javax.swing.JTextField _tfSystemID;
    private javax.swing.JTextField _tfSystemNumber;
    private javax.swing.JTextField _tfUserName;
    // End of variables declaration//GEN-END:variables

     //check if JTextField has changed
    public void changedUpdate(DocumentEvent e) {
        checkDoc(e);
    }

    public void insertUpdate(DocumentEvent e) {
        checkDoc(e);
    }

    public void removeUpdate(DocumentEvent e) {
        checkDoc(e);
    }

    public void checkDoc(DocumentEvent e) {
//        String CUServiceName = connectionTextField.getText().trim();
//        if (CUServiceName != null && CUServiceName.length() > 0) {
//            m_page.setCanAdvance(true);
//        } else {
//            m_page.setCanAdvance(false);
//        }
    }

}
