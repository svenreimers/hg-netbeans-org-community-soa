/*
 * AdvancedQueueManagerPanel.java
 *
 * Created on July 14, 2008, 4:25 PM
 */

package org.netbeans.modules.wsdlextensions.mq.editor.panels;

import org.netbeans.modules.wsdlextensions.mq.editor.CipherSuitesModel;

/**
 *
 * @author  nang
 */
public class AdvancedQueueManagerPanel extends javax.swing.JPanel {

    /** Creates new form AdvancedQueueManagerPanel */
    public AdvancedQueueManagerPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mQueueManagerLabel.setLabelFor(mQueueManagerTextField);
        org.openide.awt.Mnemonics.setLocalizedText(mQueueManagerLabel, org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mQueueManagerLabel.text")); // NOI18N

        mSslSubPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSslSubPanel.border.title"))); // NOI18N

        mCipherSpecLabel.setLabelFor(mCipherSpecComboBox);
        org.openide.awt.Mnemonics.setLocalizedText(mCipherSpecLabel, org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mCipherSpecLabel.text")); // NOI18N

        mCipherSpecComboBox.setModel(new CipherSuitesModel().getAsComboBoxModel());
        mCipherSpecComboBox.setToolTipText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mCipherSpecComboBox.toolTipText")); // NOI18N

        mSslPeerNameLabel.setLabelFor(mSslPeerNameTextField);
        org.openide.awt.Mnemonics.setLocalizedText(mSslPeerNameLabel, org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSslPeerNameLabel.text")); // NOI18N

        mSslPeerNameTextField.setText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSslPeerNameTextField.text")); // NOI18N
        mSslPeerNameTextField.setToolTipText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSslPeerNameTextField.toolTipText")); // NOI18N

        org.jdesktop.layout.GroupLayout mSslSubPanelLayout = new org.jdesktop.layout.GroupLayout(mSslSubPanel);
        mSslSubPanel.setLayout(mSslSubPanelLayout);
        mSslSubPanelLayout.setHorizontalGroup(
            mSslSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mSslSubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mSslSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mSslPeerNameLabel)
                    .add(mCipherSpecLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mSslSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mCipherSpecComboBox, 0, 322, Short.MAX_VALUE)
                    .add(mSslPeerNameTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
                .addContainerGap())
        );
        mSslSubPanelLayout.setVerticalGroup(
            mSslSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mSslSubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mSslSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mCipherSpecLabel)
                    .add(mCipherSpecComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mSslSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mSslPeerNameLabel)
                    .add(mSslPeerNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mCipherSpecLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mCipherSpecLabel.AccessibleContext.accessibleName")); // NOI18N
        mCipherSpecComboBox.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mCipherSpecComboBox.AccessibleContext.accessibleName")); // NOI18N
        mSslPeerNameLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSslPeerNameLabel.AccessibleContext.accessibleName")); // NOI18N
        mSslPeerNameTextField.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSslPeerNameTextField.AccessibleContext.accessibleName")); // NOI18N

        mSecExitSubPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mSecExitSubPanel.border.title"))); // NOI18N

        mUsernameLabel.setLabelFor(mUsernameTextField);
        org.openide.awt.Mnemonics.setLocalizedText(mUsernameLabel, org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mUsernameLabel.text")); // NOI18N

        mUsernameTextField.setText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mUsernameTextField.text")); // NOI18N
        mUsernameTextField.setToolTipText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mUsernameTextField.toolTipText")); // NOI18N

        mPasswordLabel.setLabelFor(mPasswordField);
        org.openide.awt.Mnemonics.setLocalizedText(mPasswordLabel, org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mPasswordLabel.text")); // NOI18N

        mPasswordField.setText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mPasswordField.text")); // NOI18N
        mPasswordField.setToolTipText(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mPasswordField.toolTipText")); // NOI18N

        org.jdesktop.layout.GroupLayout mSecExitSubPanelLayout = new org.jdesktop.layout.GroupLayout(mSecExitSubPanel);
        mSecExitSubPanel.setLayout(mSecExitSubPanelLayout);
        mSecExitSubPanelLayout.setHorizontalGroup(
            mSecExitSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mSecExitSubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mSecExitSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mUsernameLabel)
                    .add(mPasswordLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mSecExitSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mUsernameTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                    .add(mPasswordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE))
                .addContainerGap())
        );
        mSecExitSubPanelLayout.setVerticalGroup(
            mSecExitSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mSecExitSubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mSecExitSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mUsernameLabel)
                    .add(mUsernameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mSecExitSubPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mPasswordLabel)
                    .add(mPasswordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mUsernameLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.jLabel1.AccessibleContext.accessibleName")); // NOI18N
        mUsernameTextField.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mUsernameTextField.AccessibleContext.accessibleName")); // NOI18N
        mPasswordLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.jLabel2.AccessibleContext.accessibleName")); // NOI18N
        mPasswordField.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mPasswordField.AccessibleContext.accessibleName")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(mQueueManagerLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(mQueueManagerTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                    .add(mSecExitSubPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(mSslSubPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(mQueueManagerLabel)
                    .add(mQueueManagerTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(mSslSubPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mSecExitSubPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mQueueManagerLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mQueueManagerLabel.AccessibleContext.accessibleName")); // NOI18N
        mQueueManagerTextField.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.mQueueManagerTextField.AccessibleContext.accessibleName")); // NOI18N

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AdvancedQueueManagerPanel.class, "AdvancedQueueManagerPanel.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected final javax.swing.JComboBox mCipherSpecComboBox = new javax.swing.JComboBox();
    private final javax.swing.JLabel mCipherSpecLabel = new javax.swing.JLabel();
    protected final javax.swing.JPasswordField mPasswordField = new javax.swing.JPasswordField();
    private final javax.swing.JLabel mPasswordLabel = new javax.swing.JLabel();
    private final javax.swing.JLabel mQueueManagerLabel = new javax.swing.JLabel();
    protected final javax.swing.JTextField mQueueManagerTextField = new javax.swing.JTextField();
    private final javax.swing.JPanel mSecExitSubPanel = new javax.swing.JPanel();
    private final javax.swing.JLabel mSslPeerNameLabel = new javax.swing.JLabel();
    protected final javax.swing.JTextField mSslPeerNameTextField = new javax.swing.JTextField();
    private final javax.swing.JPanel mSslSubPanel = new javax.swing.JPanel();
    private final javax.swing.JLabel mUsernameLabel = new javax.swing.JLabel();
    protected final javax.swing.JTextField mUsernameTextField = new javax.swing.JTextField();
    // End of variables declaration//GEN-END:variables

}
