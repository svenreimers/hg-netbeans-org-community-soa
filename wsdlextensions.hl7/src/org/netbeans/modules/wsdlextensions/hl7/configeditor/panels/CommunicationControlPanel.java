/*
 * CommunicationControlPanel.java
 *
 * Created on November 25, 2008, 2:42 PM
 */

package org.netbeans.modules.wsdlextensions.hl7.configeditor.panels;

/**
 *
 * @author  Vishnuvardhan P.R
 */
public class CommunicationControlPanel extends javax.swing.JPanel {

    /** Creates new form CommunicationControlPanel */
    public CommunicationControlPanel() {
        initComponents();
		//setting Label For
		setLableFor();
		// setting Accessibility
		setAccessibility();
    }

    @Override
    public String getName() {
        return org.openide.util.NbBundle.getMessage(GeneralPanel.class,
                "CommunicationControlPanel.StepLabel");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        pnlInbound = new javax.swing.JPanel();
        chkMaxNakSent = new javax.swing.JCheckBox();
        txtMaxNakSent = new javax.swing.JTextField();
        cmbMaxNakSent = new javax.swing.JComboBox();
        chkMaxCanNakSent = new javax.swing.JCheckBox();
        txtMaxCanNakSent = new javax.swing.JTextField();
        cmbMaxCanNakSent = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        pnlOutbound = new javax.swing.JPanel();
        chkMaxConnectRetries = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        txtMaxConnectRetries = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbMaxConnectRetries = new javax.swing.JComboBox();
        chkTimeToWait = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txtTimeToWait = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbTimeToWait = new javax.swing.JComboBox();
        chkMaxNoResponse = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtMaxNoResponse = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbMaxNoResponse = new javax.swing.JComboBox();
        chkNakReceived = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        cmbNakReceived = new javax.swing.JComboBox();
        chkMaxNakReceived = new javax.swing.JCheckBox();
        txtMaxNakReceived = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbMaxNakReceived = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        descriptionPanel = new org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel();

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setContinuousLayout(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnlInbound.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(chkMaxNakSent, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakSent.text")); // NOI18N
        chkMaxNakSent.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakSent.toolTipText")); // NOI18N

        txtMaxNakSent.setText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakSent.text")); // NOI18N
        txtMaxNakSent.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakSent.toolTipText")); // NOI18N

        cmbMaxNakSent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMaxNakSent.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNakSent.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkMaxCanNakSent, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxCanNakSent.text")); // NOI18N
        chkMaxCanNakSent.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxCanNakSent.toolTipText")); // NOI18N

        txtMaxCanNakSent.setText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxCanNakSent.text")); // NOI18N
        txtMaxCanNakSent.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxCanNakSent.toolTipText")); // NOI18N

        cmbMaxCanNakSent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMaxCanNakSent.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxCanNakSent.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel4.text")); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel15.text")); // NOI18N

        org.jdesktop.layout.GroupLayout pnlInboundLayout = new org.jdesktop.layout.GroupLayout(pnlInbound);
        pnlInbound.setLayout(pnlInboundLayout);
        pnlInboundLayout.setHorizontalGroup(
            pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlInboundLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlInboundLayout.createSequentialGroup()
                        .add(chkMaxNakSent)
                        .add(10, 10, 10))
                    .add(pnlInboundLayout.createSequentialGroup()
                        .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnlInboundLayout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtMaxNakSent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(chkMaxCanNakSent)
                                .add(pnlInboundLayout.createSequentialGroup()
                                    .add(21, 21, 21)
                                    .add(jLabel3)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(txtMaxCanNakSent))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cmbMaxNakSent, 0, 130, Short.MAX_VALUE)
                            .add(cmbMaxCanNakSent, 0, 130, Short.MAX_VALUE)))
                    .add(jLabel15))
                .addContainerGap())
        );
        pnlInboundLayout.setVerticalGroup(
            pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlInboundLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(chkMaxNakSent)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtMaxNakSent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(cmbMaxNakSent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkMaxCanNakSent)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(pnlInboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtMaxCanNakSent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(jLabel3)
                    .add(cmbMaxCanNakSent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlOutbound.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(chkMaxConnectRetries, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxConnectRetries.text")); // NOI18N
        chkMaxConnectRetries.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxConnectRetries.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel5.text")); // NOI18N

        txtMaxConnectRetries.setText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxConnectRetries.text")); // NOI18N
        txtMaxConnectRetries.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxConnectRetries.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel6.text")); // NOI18N

        cmbMaxConnectRetries.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMaxConnectRetries.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxConnectRetries.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkTimeToWait, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkTimeToWait.text")); // NOI18N
        chkTimeToWait.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkTimeToWait.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel7.text")); // NOI18N

        txtTimeToWait.setText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtTimeToWait.text")); // NOI18N
        txtTimeToWait.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtTimeToWait.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel8.text")); // NOI18N

        cmbTimeToWait.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTimeToWait.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbTimeToWait.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkMaxNoResponse, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNoResponse.text")); // NOI18N
        chkMaxNoResponse.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNoResponse.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel9.text")); // NOI18N

        txtMaxNoResponse.setText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNoResponse.text")); // NOI18N
        txtMaxNoResponse.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNoResponse.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel10.text")); // NOI18N

        cmbMaxNoResponse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMaxNoResponse.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNoResponse.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkNakReceived, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkNakReceived.text")); // NOI18N
        chkNakReceived.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkNakReceived.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel12.text")); // NOI18N

        cmbNakReceived.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbNakReceived.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbNakReceived.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkMaxNakReceived, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakReceived.text")); // NOI18N
        chkMaxNakReceived.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakReceived.toolTipText")); // NOI18N

        txtMaxNakReceived.setText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakReceived.text")); // NOI18N
        txtMaxNakReceived.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakReceived.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel13.text")); // NOI18N

        cmbMaxNakReceived.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbMaxNakReceived.setToolTipText(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNakReceived.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel14.text")); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.jLabel16.text")); // NOI18N

        org.jdesktop.layout.GroupLayout pnlOutboundLayout = new org.jdesktop.layout.GroupLayout(pnlOutbound);
        pnlOutbound.setLayout(pnlOutboundLayout);
        pnlOutboundLayout.setHorizontalGroup(
            pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlOutboundLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlOutboundLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(jLabel14)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtMaxNakReceived, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel13)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cmbMaxNakReceived, 0, 134, Short.MAX_VALUE))
                    .add(chkMaxNakReceived)
                    .add(pnlOutboundLayout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(jLabel12)
                        .add(7, 7, 7)
                        .add(cmbNakReceived, 0, 261, Short.MAX_VALUE))
                    .add(pnlOutboundLayout.createSequentialGroup()
                        .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, pnlOutboundLayout.createSequentialGroup()
                                    .add(21, 21, 21)
                                    .add(jLabel5)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(txtMaxConnectRetries))
                                .add(org.jdesktop.layout.GroupLayout.LEADING, chkMaxConnectRetries))
                            .add(pnlOutboundLayout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtTimeToWait, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pnlOutboundLayout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(jLabel9)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtMaxNoResponse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel6)
                            .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cmbMaxConnectRetries, 0, 132, Short.MAX_VALUE)
                            .add(cmbTimeToWait, 0, 132, Short.MAX_VALUE)
                            .add(cmbMaxNoResponse, 0, 132, Short.MAX_VALUE)))
                    .add(chkMaxNoResponse)
                    .add(chkTimeToWait)
                    .add(jLabel16)
                    .add(chkNakReceived))
                .addContainerGap())
        );
        pnlOutboundLayout.setVerticalGroup(
            pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlOutboundLayout.createSequentialGroup()
                .add(11, 11, 11)
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(chkMaxConnectRetries)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(txtMaxConnectRetries, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(cmbMaxConnectRetries, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkTimeToWait)
                .add(7, 7, 7)
                .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(txtTimeToWait, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8)
                    .add(cmbTimeToWait, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkMaxNoResponse)
                .add(8, 8, 8)
                .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(txtMaxNoResponse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(cmbMaxNoResponse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(chkNakReceived)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmbNakReceived, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel12))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(chkMaxNakReceived)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlOutboundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtMaxNakReceived, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbMaxNakReceived, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13)
                    .add(jLabel14))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlInbound, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(pnlOutbound, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(pnlInbound, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlOutbound, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setTopComponent(jPanel1);
        jSplitPane1.setRightComponent(descriptionPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	private void setAccessibility() {
		chkMaxCanNakSent.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxCanNakSent.toolTipText")); // NOI18N
		chkMaxCanNakSent.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxCanNakSent.toolTipText")); // NOI18N
        chkMaxConnectRetries.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxConnectRetries.toolTipText")); // NOI18N
        chkMaxConnectRetries.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxConnectRetries.toolTipText")); // NOI18N
        chkMaxNakReceived.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakReceived.toolTipText")); // NOI18N
        chkMaxNakReceived.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakReceived.toolTipText")); // NOI18N
        chkMaxNakSent.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakSent.toolTipText")); // NOI18N
        chkMaxNakSent.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNakSent.toolTipText")); // NOI18N
        chkMaxNoResponse.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNoResponse.toolTipText")); // NOI18N
        chkMaxNoResponse.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkMaxNoResponse.toolTipText")); // NOI18N
        chkNakReceived.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkNakReceived.toolTipText")); // NOI18N
        chkNakReceived.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkNakReceived.toolTipText")); // NOI18N
        chkTimeToWait.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkTimeToWait.toolTipText")); // NOI18N
        chkTimeToWait.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.chkTimeToWait.toolTipText")); // NOI18N
        cmbMaxCanNakSent.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxCanNakSent.toolTipText")); // NOI18N
        cmbMaxCanNakSent.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxCanNakSent.toolTipText")); // NOI18N
        cmbMaxConnectRetries.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxConnectRetries.toolTipText")); // NOI18N
        cmbMaxConnectRetries.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxConnectRetries.toolTipText")); // NOI18N
        cmbMaxNakReceived.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNakReceived.toolTipText")); // NOI18N
        cmbMaxNakReceived.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNakReceived.toolTipText")); // NOI18N
        cmbMaxNakSent.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNakSent.toolTipText")); // NOI18N
        cmbMaxNakSent.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNakSent.toolTipText")); // NOI18N
        cmbMaxNoResponse.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNoResponse.toolTipText")); // NOI18N
        cmbMaxNoResponse.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbMaxNoResponse.toolTipText")); // NOI18N
        cmbNakReceived.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbNakReceived.toolTipText")); // NOI18N
        cmbNakReceived.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbNakReceived.toolTipText")); // NOI18N
        cmbTimeToWait.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbTimeToWait.toolTipText")); // NOI18N
        cmbTimeToWait.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.cmbTimeToWait.toolTipText")); // NOI18N
        txtMaxCanNakSent.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxCanNakSent.toolTipText")); // NOI18N
        txtMaxCanNakSent.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxCanNakSent.toolTipText")); // NOI18N
        txtMaxConnectRetries.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxConnectRetries.toolTipText")); // NOI18N
        txtMaxConnectRetries.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxConnectRetries.toolTipText")); // NOI18N
        txtMaxNakReceived.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakReceived.toolTipText")); // NOI18N
        txtMaxNakReceived.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakReceived.toolTipText")); // NOI18N
        txtMaxNakSent.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakSent.toolTipText")); // NOI18N
        txtMaxNakSent.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNakSent.toolTipText")); // NOI18N
        txtMaxNoResponse.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNoResponse.toolTipText")); // NOI18N
        txtMaxNoResponse.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtMaxNoResponse.toolTipText")); // NOI18N
        txtTimeToWait.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtTimeToWait.toolTipText")); // NOI18N
        txtTimeToWait.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(CommunicationControlPanel.class, "CommunicationControlPanel.txtTimeToWait.toolTipText")); // NOI18N
		this.getAccessibleContext().setAccessibleName(getName());
        this.getAccessibleContext().setAccessibleDescription(getName());
        
    }

	private void setLableFor(){
		jLabel1.setLabelFor(txtMaxNakSent);
		jLabel2.setLabelFor(cmbMaxNakSent);
		jLabel3.setLabelFor(txtMaxCanNakSent);
		jLabel4.setLabelFor(cmbMaxCanNakSent);
		jLabel5.setLabelFor(txtMaxConnectRetries);
		jLabel6.setLabelFor(cmbMaxConnectRetries);
		jLabel7.setLabelFor(txtTimeToWait);
		jLabel8.setLabelFor(cmbTimeToWait);
		jLabel9.setLabelFor(txtMaxNoResponse);	
		jLabel10.setLabelFor(cmbMaxNoResponse);	
		jLabel12.setLabelFor(cmbNakReceived);	
		jLabel13.setLabelFor(cmbMaxNakReceived);	
		jLabel14.setLabelFor(txtMaxNakReceived);	
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JCheckBox chkMaxCanNakSent;
    protected javax.swing.JCheckBox chkMaxConnectRetries;
    protected javax.swing.JCheckBox chkMaxNakReceived;
    protected javax.swing.JCheckBox chkMaxNakSent;
    protected javax.swing.JCheckBox chkMaxNoResponse;
    protected javax.swing.JCheckBox chkNakReceived;
    protected javax.swing.JCheckBox chkTimeToWait;
    protected javax.swing.JComboBox cmbMaxCanNakSent;
    protected javax.swing.JComboBox cmbMaxConnectRetries;
    protected javax.swing.JComboBox cmbMaxNakReceived;
    protected javax.swing.JComboBox cmbMaxNakSent;
    protected javax.swing.JComboBox cmbMaxNoResponse;
    protected javax.swing.JComboBox cmbNakReceived;
    protected javax.swing.JComboBox cmbTimeToWait;
    protected org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel descriptionPanel;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel10;
    protected javax.swing.JLabel jLabel12;
    protected javax.swing.JLabel jLabel13;
    protected javax.swing.JLabel jLabel14;
    protected javax.swing.JLabel jLabel15;
    protected javax.swing.JLabel jLabel16;
    protected javax.swing.JLabel jLabel2;
    protected javax.swing.JLabel jLabel3;
    protected javax.swing.JLabel jLabel4;
    protected javax.swing.JLabel jLabel5;
    protected javax.swing.JLabel jLabel6;
    protected javax.swing.JLabel jLabel7;
    protected javax.swing.JLabel jLabel8;
    protected javax.swing.JLabel jLabel9;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JSplitPane jSplitPane1;
    protected javax.swing.JPanel pnlInbound;
    protected javax.swing.JPanel pnlOutbound;
    protected javax.swing.JTextField txtMaxCanNakSent;
    protected javax.swing.JTextField txtMaxConnectRetries;
    protected javax.swing.JTextField txtMaxNakReceived;
    protected javax.swing.JTextField txtMaxNakSent;
    protected javax.swing.JTextField txtMaxNoResponse;
    protected javax.swing.JTextField txtTimeToWait;
    // End of variables declaration//GEN-END:variables

}
