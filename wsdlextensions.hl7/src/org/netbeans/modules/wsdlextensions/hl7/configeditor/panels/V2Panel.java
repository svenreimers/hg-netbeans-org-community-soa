/*
 * V2Panel.java
 *
 * Created on September 26, 2008, 11:44 AM
 */

package org.netbeans.modules.wsdlextensions.hl7.configeditor.panels;

/**
 *
 * @author  Vishnuvardhan P.R
 */
public class V2Panel extends javax.swing.JPanel {

    /** Creates new form V2Panel */
    public V2Panel() {
        initComponents();
		// setting for label for
		setLableFor();
		//setting Accessibility.
		setAccessibility();
    }

    @Override
    public String getName() {
        return org.openide.util.NbBundle.getMessage(GeneralPanel.class,
                "V2Panel.StepLabel");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        lblLHL7V2Properties = new javax.swing.JLabel();
        lblAckMode = new javax.swing.JLabel();
        radOriginal = new javax.swing.JRadioButton();
        radEnhanced = new javax.swing.JRadioButton();
        lblMSHProperties = new javax.swing.JLabel();
        lblValidateMSH = new javax.swing.JLabel();
        lblSequenceNo = new javax.swing.JLabel();
        lblSendingApplication = new javax.swing.JLabel();
        lblSendingFacility = new javax.swing.JLabel();
        lblEncodingChars = new javax.swing.JLabel();
        txtEncodingChars = new javax.swing.JTextField();
        lblFieldSeparator = new javax.swing.JLabel();
        txtFieldSeparator = new javax.swing.JTextField();
        txtSendingFacility = new javax.swing.JTextField();
        txtSendingApplication = new javax.swing.JTextField();
        chkSeqNoEnabled = new javax.swing.JCheckBox();
        chkValidateMSH = new javax.swing.JCheckBox();
        lblProcessingId = new javax.swing.JLabel();
        cmbProcessingId = new javax.swing.JComboBox();
        lblVersionId = new javax.swing.JLabel();
        cmbVersionId = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        lblSFTEnabled = new javax.swing.JLabel();
        lblSoftVendorOrg = new javax.swing.JLabel();
        lblSoftCertifiedVersion = new javax.swing.JLabel();
        lblSoftProdName = new javax.swing.JLabel();
        lblSoftProdInfo = new javax.swing.JLabel();
        lblSoftBinaryId = new javax.swing.JLabel();
        lblSoftInstallDate = new javax.swing.JLabel();
        chkSFTEnabled = new javax.swing.JCheckBox();
        txtSoftVendorOrg = new javax.swing.JTextField();
        txtSoftVersionReleaseNo = new javax.swing.JTextField();
        txtSoftProdName = new javax.swing.JTextField();
        txtSoftProductInfo = new javax.swing.JTextField();
        txtSoftBinaryId = new javax.swing.JTextField();
        txtSoftInstallDate = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblJornallingEnabled = new javax.swing.JLabel();
        chkJournallingEnabled = new javax.swing.JCheckBox();
        descriptionPanel = new org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel();

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setContinuousLayout(true);

        lblLHL7V2Properties.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblLHL7V2Properties, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblLHL7V2Properties.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblAckMode, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblAckMode.text_3")); // NOI18N

        buttonGroup1.add(radOriginal);
        org.openide.awt.Mnemonics.setLocalizedText(radOriginal, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radOriginal.text")); // NOI18N
        radOriginal.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radOriginal.toolTipText")); // NOI18N

        buttonGroup1.add(radEnhanced);
        org.openide.awt.Mnemonics.setLocalizedText(radEnhanced, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radEnhanced.text")); // NOI18N
        radEnhanced.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radEnhanced.toolTipText")); // NOI18N

        lblMSHProperties.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblMSHProperties, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblMSHProperties.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblValidateMSH, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblValidateMSH.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSequenceNo, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSequenceNo.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSendingApplication, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSendingApplication.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSendingFacility, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSendingFacility.text_2")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblEncodingChars, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblEncodingChars.text_2")); // NOI18N

        txtEncodingChars.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtEncodingChars.text_1")); // NOI18N
        txtEncodingChars.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtEncodingChars.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblFieldSeparator, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblFieldSeparator.text_1")); // NOI18N

        txtFieldSeparator.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtFieldSeparator.text_1")); // NOI18N
        txtFieldSeparator.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtFieldSeparator.toolTipText")); // NOI18N

        txtSendingFacility.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingFacility.text_1")); // NOI18N
        txtSendingFacility.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingFacility.toolTipText")); // NOI18N

        txtSendingApplication.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingApplication.text_1")); // NOI18N
        txtSendingApplication.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingApplication.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkSeqNoEnabled, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSeqNoEnabled.text_3")); // NOI18N
        chkSeqNoEnabled.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSeqNoEnabled.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkValidateMSH, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkValidateMSH.text_1")); // NOI18N
        chkValidateMSH.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkValidateMSH.toolTipText")); // NOI18N
        chkValidateMSH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkValidateMSHActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblProcessingId, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblProcessingId.text_1")); // NOI18N

        cmbProcessingId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProcessingId.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.cmbProcessingId.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblVersionId, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblVersionId.text_1")); // NOI18N

        cmbVersionId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbVersionId.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.cmbVersionId.toolTipText")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.jLabel4.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSFTEnabled, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSFTEnabled.text_2")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSoftVendorOrg, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSoftVendorOrg.text_2")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSoftCertifiedVersion, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSoftCertifiedVersion.text_2")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSoftProdName, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSoftProdName.text_2")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSoftProdInfo, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSoftProdInfo.text_2")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSoftBinaryId, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSoftBinaryId.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblSoftInstallDate, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblSoftInstallDate.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkSFTEnabled, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSFTEnabled.text_2")); // NOI18N
        chkSFTEnabled.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSFTEnabled.toolTipText")); // NOI18N

        txtSoftVendorOrg.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftVendorOrg.toolTipText")); // NOI18N

        txtSoftVersionReleaseNo.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftVersionReleaseNo.toolTipText")); // NOI18N

        txtSoftProdName.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProdName.toolTipText")); // NOI18N

        txtSoftProductInfo.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProductInfo.text_1")); // NOI18N
        txtSoftProductInfo.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProductInfo.toolTipText")); // NOI18N

        txtSoftBinaryId.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftBinaryId.text_1")); // NOI18N
        txtSoftBinaryId.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftBinaryId.toolTipText")); // NOI18N

        txtSoftInstallDate.setText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftInstallDate.text_1")); // NOI18N
        txtSoftInstallDate.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftInstallDate.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblJornallingEnabled, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.lblJornallingEnabled.text_1")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkJournallingEnabled, org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkJournallingEnabled.text_1")); // NOI18N
        chkJournallingEnabled.setToolTipText(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkJournallingEnabled.toolTipText")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(lblAckMode)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(radOriginal)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(radEnhanced))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblJornallingEnabled)
                                    .add(lblSFTEnabled))
                                .add(175, 175, 175)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(chkSFTEnabled)
                                    .add(chkJournallingEnabled)))
                            .add(lblSoftInstallDate)
                            .add(lblSoftProdInfo)
                            .add(lblSoftBinaryId)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblSoftVendorOrg)
                                    .add(lblSoftProdName)
                                    .add(lblSoftCertifiedVersion))
                                .add(14, 14, 14)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtSoftProdName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                    .add(txtSoftVersionReleaseNo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                    .add(txtSoftProductInfo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                    .add(txtSoftBinaryId, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                    .add(txtSoftInstallDate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                                    .add(txtSoftVendorOrg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)))))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lblLHL7V2Properties)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel4)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblEncodingChars)
                            .add(lblSendingApplication)
                            .add(lblValidateMSH)
                            .add(lblSequenceNo)
                            .add(lblSendingFacility))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(chkValidateMSH)
                            .add(chkSeqNoEnabled)
                            .add(txtSendingFacility)
                            .add(txtSendingApplication, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .add(txtEncodingChars))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 16, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lblProcessingId)
                            .add(lblVersionId)
                            .add(lblFieldSeparator))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cmbProcessingId, 0, 101, Short.MAX_VALUE)
                            .add(cmbVersionId, 0, 101, Short.MAX_VALUE)
                            .add(txtFieldSeparator, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lblMSHProperties))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblLHL7V2Properties)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblAckMode)
                    .add(radOriginal)
                    .add(radEnhanced))
                .add(6, 6, 6)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(lblMSHProperties)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblValidateMSH, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .add(chkValidateMSH))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblSequenceNo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .add(chkSeqNoEnabled))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblSendingApplication, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .add(txtSendingApplication, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblSendingFacility)
                            .add(txtSendingFacility)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblProcessingId)
                            .add(cmbProcessingId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cmbVersionId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblVersionId))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblEncodingChars)
                    .add(txtEncodingChars, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtFieldSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblFieldSeparator, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(16, 16, 16)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chkSFTEnabled)
                    .add(lblSFTEnabled))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblJornallingEnabled)
                    .add(chkJournallingEnabled))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(lblSoftVendorOrg)
                    .add(txtSoftVendorOrg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(lblSoftCertifiedVersion)
                    .add(txtSoftVersionReleaseNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(lblSoftProdName)
                    .add(txtSoftProdName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblSoftProdInfo)
                    .add(txtSoftProductInfo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblSoftBinaryId)
                    .add(txtSoftBinaryId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblSoftInstallDate)
                    .add(txtSoftInstallDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(43, 43, 43))
        );

        jPanel2Layout.linkSize(new java.awt.Component[] {lblSFTEnabled, lblSoftCertifiedVersion, lblSoftProdName, lblSoftVendorOrg}, org.jdesktop.layout.GroupLayout.VERTICAL);

        jSplitPane1.setTopComponent(jPanel2);

        descriptionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSplitPane1.setRightComponent(descriptionPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

private void chkValidateMSHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkValidateMSHActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chkValidateMSHActionPerformed
	private void setAccessibility() {
		radOriginal.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radOriginal.toolTipText")); // NOI18N
		radOriginal.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radOriginal.toolTipText")); // NOI18N
        radEnhanced.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radEnhanced.toolTipText")); // NOI18N
        radEnhanced.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.radEnhanced.toolTipText")); // NOI18N
        chkValidateMSH.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkValidateMSH.toolTipText")); // NOI18N
        chkValidateMSH.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkValidateMSH.toolTipText")); // NOI18N
        chkSeqNoEnabled.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSeqNoEnabled.toolTipText")); // NOI18N
        chkSeqNoEnabled.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSeqNoEnabled.toolTipText")); // NOI18N
        chkSFTEnabled.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSFTEnabled.toolTipText")); // NOI18N
        chkSFTEnabled.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkSFTEnabled.toolTipText")); // NOI18N
        cmbProcessingId.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.cmbProcessingId.toolTipText")); // NOI18N
        cmbProcessingId.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.cmbProcessingId.toolTipText")); // NOI18N
        cmbVersionId.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.cmbVersionId.toolTipText")); // NOI18N
        cmbVersionId.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.cmbVersionId.toolTipText")); // NOI18N
        txtSendingApplication.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingApplication.toolTipText")); // NOI18N
        txtSendingApplication.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingApplication.toolTipText")); // NOI18N
        txtSendingFacility.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingFacility.toolTipText")); // NOI18N
        txtSendingFacility.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSendingFacility.toolTipText")); // NOI18N
        chkJournallingEnabled.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkJournallingEnabled.toolTipText")); // NOI18N
        chkJournallingEnabled.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.chkJournallingEnabled.toolTipText")); // NOI18N
        txtEncodingChars.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtEncodingChars.toolTipText")); // NOI18N
        txtEncodingChars.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtEncodingChars.toolTipText")); // NOI18N
        txtFieldSeparator.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtFieldSeparator.toolTipText")); // NOI18N
        txtFieldSeparator.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtFieldSeparator.toolTipText")); // NOI18N
        txtSoftBinaryId.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftBinaryId.toolTipText")); // NOI18N
        txtSoftBinaryId.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftBinaryId.toolTipText")); // NOI18N
        txtSoftInstallDate.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftInstallDate.toolTipText")); // NOI18N
        txtSoftInstallDate.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftInstallDate.toolTipText")); // NOI18N
        txtSoftProdName.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProdName.toolTipText")); // NOI18N
        txtSoftProdName.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProdName.toolTipText")); // NOI18N
        txtSoftProductInfo.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProductInfo.toolTipText")); // NOI18N
        txtSoftProductInfo.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftProductInfo.toolTipText")); // NOI18N
        txtSoftVendorOrg.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftVersionReleaseNo.toolTipText")); // NOI18N
        txtSoftVendorOrg.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftVersionReleaseNo.toolTipText")); // NOI18N
        txtSoftVersionReleaseNo.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftVersionReleaseNo.toolTipText")); // NOI18N
        txtSoftVersionReleaseNo.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(V2Panel.class, "V2Panel.txtSoftVersionReleaseNo.toolTipText")); // NOI18N
		this.getAccessibleContext().setAccessibleName(getName());
        this.getAccessibleContext().setAccessibleDescription(getName());
        
    }
	private void setLableFor(){
		lblEncodingChars.setLabelFor(txtEncodingChars);
		lblFieldSeparator.setLabelFor(txtFieldSeparator);
		lblSendingApplication.setLabelFor(txtSendingApplication);
		lblSendingFacility.setLabelFor(txtSendingFacility);
		lblSoftBinaryId.setLabelFor(txtSoftBinaryId);
		lblSoftCertifiedVersion.setLabelFor(txtSoftVersionReleaseNo);
		lblSoftInstallDate.setLabelFor(txtSoftInstallDate);
		lblSoftProdInfo.setLabelFor(txtSoftProductInfo);
		lblSoftProdName.setLabelFor(txtSoftProdName);
		lblSoftVendorOrg.setLabelFor(txtSoftVendorOrg);
		lblProcessingId.setLabelFor(cmbProcessingId);
		lblVersionId.setLabelFor(cmbVersionId);
	}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.ButtonGroup buttonGroup1;
    protected javax.swing.JCheckBox chkJournallingEnabled;
    protected javax.swing.JCheckBox chkSFTEnabled;
    protected javax.swing.JCheckBox chkSeqNoEnabled;
    protected javax.swing.JCheckBox chkValidateMSH;
    protected javax.swing.JComboBox cmbProcessingId;
    protected javax.swing.JComboBox cmbVersionId;
    protected org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel descriptionPanel;
    protected javax.swing.JLabel jLabel4;
    protected javax.swing.JPanel jPanel2;
    protected javax.swing.JSeparator jSeparator1;
    protected javax.swing.JSeparator jSeparator2;
    protected javax.swing.JSplitPane jSplitPane1;
    protected javax.swing.JLabel lblAckMode;
    protected javax.swing.JLabel lblEncodingChars;
    protected javax.swing.JLabel lblFieldSeparator;
    protected javax.swing.JLabel lblJornallingEnabled;
    protected javax.swing.JLabel lblLHL7V2Properties;
    protected javax.swing.JLabel lblMSHProperties;
    protected javax.swing.JLabel lblProcessingId;
    protected javax.swing.JLabel lblSFTEnabled;
    protected javax.swing.JLabel lblSendingApplication;
    protected javax.swing.JLabel lblSendingFacility;
    protected javax.swing.JLabel lblSequenceNo;
    protected javax.swing.JLabel lblSoftBinaryId;
    protected javax.swing.JLabel lblSoftCertifiedVersion;
    protected javax.swing.JLabel lblSoftInstallDate;
    protected javax.swing.JLabel lblSoftProdInfo;
    protected javax.swing.JLabel lblSoftProdName;
    protected javax.swing.JLabel lblSoftVendorOrg;
    protected javax.swing.JLabel lblValidateMSH;
    protected javax.swing.JLabel lblVersionId;
    protected javax.swing.JRadioButton radEnhanced;
    protected javax.swing.JRadioButton radOriginal;
    protected javax.swing.JTextField txtEncodingChars;
    protected javax.swing.JTextField txtFieldSeparator;
    protected javax.swing.JTextField txtSendingApplication;
    protected javax.swing.JTextField txtSendingFacility;
    protected javax.swing.JTextField txtSoftBinaryId;
    protected javax.swing.JTextField txtSoftInstallDate;
    protected javax.swing.JTextField txtSoftProdName;
    protected javax.swing.JTextField txtSoftProductInfo;
    protected javax.swing.JTextField txtSoftVendorOrg;
    protected javax.swing.JTextField txtSoftVersionReleaseNo;
    // End of variables declaration//GEN-END:variables

}
