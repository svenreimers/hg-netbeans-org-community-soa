/*
 * GeneralPanel.java
 *
 * Created on September 26, 2008, 11:34 AM
 */

package org.netbeans.modules.wsdlextensions.hl7.configeditor.panels;

/**
 *
 * @author  Vishnuvardhan P.R
 */
public class GeneralPanel extends javax.swing.JPanel {

    /** Creates new form GeneralPanel */
    public GeneralPanel() {
        initComponents();
		// setting Lable for
		setLableFor();
		setAccessibility();

    }

    @Override
    public String getName() {
        return org.openide.util.NbBundle.getMessage(GeneralPanel.class,
                "GeneralPanel.StepLabel");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        lblEndpointProperties = new javax.swing.JLabel();
        lblTransportProtocol = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        cmbTransportProtocol = new javax.swing.JComboBox();
        txtLocation = new javax.swing.JTextField();
        lblEncodingDetails = new javax.swing.JLabel();
        lblUse = new javax.swing.JLabel();
        lblEncoder = new javax.swing.JLabel();
        txtEncoder = new javax.swing.JTextField();
        radUseLiteral = new javax.swing.JRadioButton();
        radUseEncoded = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblLLPDetails = new javax.swing.JLabel();
        lblLLPType = new javax.swing.JLabel();
        lblStartBlockChar = new javax.swing.JLabel();
        lblEndBlockChar = new javax.swing.JLabel();
        cmbLLPType = new javax.swing.JComboBox();
        txtStartBlockChar = new javax.swing.JTextField();
        txtEndDataChar = new javax.swing.JTextField();
        lblEndDataChar = new javax.swing.JLabel();
        lblHLLPChecksum = new javax.swing.JLabel();
        txtEndBlockChar = new javax.swing.JTextField();
        chkHLLPChecksum = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        mllpv2panel = new javax.swing.JPanel();
        lblMLLPV2Properties = new javax.swing.JLabel();
        lblMLLPV2Retries = new javax.swing.JLabel();
        lblMLLPV2RetryInterval = new javax.swing.JLabel();
        lblTimeToWaitAckNak = new javax.swing.JLabel();
        txtMLLP2RetriesCount = new javax.swing.JTextField();
        txtMLLPv2RetryInterval = new javax.swing.JTextField();
        txtMLLPV2DurationAckNak = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        descriptionPanel1 = new org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel();
        descriptionPanel = new org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel();
        lblPersistence = new javax.swing.JLabel();
        chkPersistence = new javax.swing.JCheckBox();

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setContinuousLayout(true);

        lblEndpointProperties.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblEndpointProperties, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblEndpointProperties.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblTransportProtocol, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblTransportProtocol.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblLocation, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblLocation.text_3")); // NOI18N

        cmbTransportProtocol.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cmbTransportProtocol.toolTipText")); // NOI18N

        txtLocation.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtLocation.toolTipText")); // NOI18N

        lblEncodingDetails.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblEncodingDetails, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblEncodingDetails.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblUse, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel_1.jLabel16.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblEncoder, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblEncoder.text")); // NOI18N

        txtEncoder.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEncoder.text_1")); // NOI18N
        txtEncoder.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEncoder.toolTipText")); // NOI18N

        buttonGroup1.add(radUseLiteral);
        org.openide.awt.Mnemonics.setLocalizedText(radUseLiteral, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel_1.jRadioButton1.text")); // NOI18N
        radUseLiteral.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.radUseLiteral.toolTipText")); // NOI18N

        buttonGroup1.add(radUseEncoded);
        org.openide.awt.Mnemonics.setLocalizedText(radUseEncoded, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel_1.jRadioButton2.text")); // NOI18N
        radUseEncoded.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.radUseEncoded.toolTipText")); // NOI18N

        lblLLPDetails.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblLLPDetails, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblLLPDetails.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblLLPType, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblLLPType.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblStartBlockChar, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblStartBlockChar.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblEndBlockChar, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblEndBlockChar.text_3")); // NOI18N

        cmbLLPType.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cmbLLPType.toolTipText")); // NOI18N

        txtStartBlockChar.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtStartBlockChar.toolTipText")); // NOI18N

        txtEndDataChar.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEndDataChar.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblEndDataChar, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblEndDataChar.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblHLLPChecksum, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblHLLPChecksum.text_3")); // NOI18N

        txtEndBlockChar.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEndBlockChar.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkHLLPChecksum, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.chkHLLPChecksum.text_3")); // NOI18N
        chkHLLPChecksum.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.chkHLLPChecksum.toolTipText")); // NOI18N

        lblMLLPV2Properties.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblMLLPV2Properties, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblMLLPV2Properties.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblMLLPV2Retries, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblMLLPV2Retries.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblMLLPV2RetryInterval, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblMLLPV2RetryInterval.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblTimeToWaitAckNak, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblTimeToWaitAckNak.text_2")); // NOI18N

        txtMLLP2RetriesCount.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLP2RetriesCount.text_3")); // NOI18N
        txtMLLP2RetriesCount.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLP2RetriesCount.toolTipText")); // NOI18N

        txtMLLPv2RetryInterval.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPv2RetryInterval.text_3")); // NOI18N
        txtMLLPv2RetryInterval.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPv2RetryInterval.toolTipText")); // NOI18N

        txtMLLPV2DurationAckNak.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPV2DurationAckNak.text_3")); // NOI18N
        txtMLLPV2DurationAckNak.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPV2DurationAckNak.toolTipText")); // NOI18N
		
        org.openide.awt.Mnemonics.setLocalizedText(lblPersistence, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblPersistence.text_3")); // NOI18N
        lblPersistence.setName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.lblPersistence.text_3")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkPersistence, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.chkboxPersistence.text_3")); // NOI18N
        chkPersistence.setName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.chkboxPersistence.text_3")); // NOI18N
        chkPersistence.setToolTipText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.chkboxPersistence.toolTipText")); // NOI18N

        org.jdesktop.layout.GroupLayout mllpv2panelLayout = new org.jdesktop.layout.GroupLayout(mllpv2panel);
        mllpv2panel.setLayout(mllpv2panelLayout);
        mllpv2panelLayout.setHorizontalGroup(
            mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mllpv2panelLayout.createSequentialGroup()
                .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(mllpv2panelLayout.createSequentialGroup()
                        .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblTimeToWaitAckNak)
                            .add(lblMLLPV2Retries)
                            .add(lblMLLPV2RetryInterval))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, txtMLLPV2DurationAckNak)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, mllpv2panelLayout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtMLLPv2RetryInterval)
                                    .add(txtMLLP2RetriesCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(lblMLLPV2Properties))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mllpv2panelLayout.setVerticalGroup(
            mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, mllpv2panelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(lblMLLPV2Properties)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblMLLPV2Retries)
                    .add(txtMLLP2RetriesCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblMLLPV2RetryInterval)
                    .add(txtMLLPv2RetryInterval, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(8, 8, 8)
                .add(mllpv2panelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTimeToWaitAckNak)
                    .add(txtMLLPV2DurationAckNak, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblEndpointProperties)
                            .add(lblEncodingDetails)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblEncoder)
                                    .add(lblUse))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(radUseLiteral)
                                        .add(6, 6, 6)
                                        .add(radUseEncoded)
                                        .add(139, 139, 139))
                                    .add(txtEncoder, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)))
                            .add(lblLLPDetails)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSeparator4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblEndBlockChar)
                                    .add(lblStartBlockChar)
                                    .add(lblLLPType))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(txtStartBlockChar)
                                    .add(txtEndBlockChar)//txtEndDataChar
                                    .add(cmbLLPType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblEndDataChar)
                                    .add(lblHLLPChecksum)
                                    .add(lblPersistence))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(chkPersistence, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(txtEndDataChar)//txtEndBlockChar
                                        .add(chkHLLPChecksum, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 89, Short.MAX_VALUE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblTransportProtocol)
                                    .add(lblLocation))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtLocation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                                    .add(cmbTransportProtocol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .add(jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(mllpv2panel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblEndpointProperties)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTransportProtocol)
                    .add(cmbTransportProtocol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblLocation)
                    .add(txtLocation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblEncodingDetails)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblUse)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(radUseEncoded)
                        .add(radUseLiteral)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblEncoder)
                    .add(txtEncoder, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblLLPDetails)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblLLPType, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .add(cmbLLPType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblEndDataChar)//txtEndBlockChar
                    .add(txtEndDataChar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblStartBlockChar)
                    .add(txtStartBlockChar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblHLLPChecksum)
                    .add(chkHLLPChecksum))
                .add(7, 7, 7)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblEndBlockChar)//txtEndDataChar
                    .add(txtEndBlockChar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblPersistence)
                    .add(chkPersistence))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mllpv2panel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {txtEndBlockChar, txtEndDataChar, txtStartBlockChar}, org.jdesktop.layout.GroupLayout.VERTICAL);

        jSplitPane1.setTopComponent(jPanel1);
        jSplitPane1.setRightComponent(descriptionPanel1);
        jSplitPane1.setRightComponent(descriptionPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	private void setAccessibility() {
		cmbTransportProtocol.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cmbTransportProtocol.toolTipText")); // NOI18N
		cmbTransportProtocol.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cmbTransportProtocol.toolTipText")); // NOI18N
        cmbLLPType.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cmbLLPType.toolTipText")); // NOI18N
        cmbLLPType.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cmbLLPType.toolTipText")); // NOI18N
        txtEndBlockChar.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEndBlockChar.toolTipText")); // NOI18N
        txtEndBlockChar.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEndBlockChar.toolTipText")); // NOI18N
        txtEndDataChar.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEndDataChar.toolTipText")); // NOI18N
        txtEndDataChar.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEndDataChar.toolTipText")); // NOI18N
        txtStartBlockChar.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtStartBlockChar.toolTipText")); // NOI18N
        txtStartBlockChar.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtStartBlockChar.toolTipText")); // NOI18N
        txtLocation.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtLocation.toolTipText")); // NOI18N
        txtLocation.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtLocation.toolTipText")); // NOI18N
        txtEncoder.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEncoder.toolTipText")); // NOI18N
        txtEncoder.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtEncoder.toolTipText")); // NOI18N
        txtMLLP2RetriesCount.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLP2RetriesCount.toolTipText")); // NOI18N
        txtMLLP2RetriesCount.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLP2RetriesCount.toolTipText")); // NOI18N
        txtMLLPV2DurationAckNak.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPV2DurationAckNak.toolTipText")); // NOI18N
        txtMLLPV2DurationAckNak.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPV2DurationAckNak.toolTipText")); // NOI18N
        txtMLLPv2RetryInterval.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPv2RetryInterval.toolTipText")); // NOI18N
        txtMLLPv2RetryInterval.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtMLLPv2RetryInterval.toolTipText")); // NOI18N
		this.getAccessibleContext().setAccessibleName(getName());
        this.getAccessibleContext().setAccessibleDescription(getName());
        
    }

	private void setLableFor(){
		lblLocation.setLabelFor(txtLocation);
		lblEncoder.setLabelFor(txtEncoder);
		lblLLPType.setLabelFor(cmbLLPType);
		lblTransportProtocol.setLabelFor(cmbTransportProtocol);
		lblEndBlockChar.setLabelFor(txtEndBlockChar);
		lblEndDataChar.setLabelFor(txtEndDataChar);
		lblStartBlockChar.setLabelFor(txtStartBlockChar);
		lblMLLPV2Retries.setLabelFor(txtMLLP2RetriesCount);
		lblMLLPV2RetryInterval.setLabelFor(txtMLLPv2RetryInterval);
		lblTimeToWaitAckNak.setLabelFor(txtMLLPV2DurationAckNak);	
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.ButtonGroup buttonGroup1;
    protected javax.swing.JCheckBox chkHLLPChecksum;
    protected javax.swing.JCheckBox chkPersistence;
    protected javax.swing.JComboBox cmbLLPType;
    protected javax.swing.JComboBox cmbTransportProtocol;
    protected org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel descriptionPanel;
    protected org.netbeans.modules.wsdlextensions.hl7.configeditor.panels.DescriptionPanel descriptionPanel1;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JLabel lblPersistence;
    protected javax.swing.JSeparator jSeparator1;
    protected javax.swing.JSeparator jSeparator2;
    protected javax.swing.JSeparator jSeparator3;
    protected javax.swing.JSeparator jSeparator4;
    protected javax.swing.JSplitPane jSplitPane1;
    protected javax.swing.JLabel lblEncoder;
    protected javax.swing.JLabel lblEncodingDetails;
    protected javax.swing.JLabel lblEndBlockChar;
    protected javax.swing.JLabel lblEndDataChar;
    protected javax.swing.JLabel lblEndpointProperties;
    protected javax.swing.JLabel lblHLLPChecksum;
    protected javax.swing.JLabel lblLLPDetails;
    protected javax.swing.JLabel lblLLPType;
    protected javax.swing.JLabel lblLocation;
    protected javax.swing.JLabel lblMLLPV2Properties;
    protected javax.swing.JLabel lblMLLPV2Retries;
    protected javax.swing.JLabel lblMLLPV2RetryInterval;
    protected javax.swing.JLabel lblStartBlockChar;
    protected javax.swing.JLabel lblTimeToWaitAckNak;
    protected javax.swing.JLabel lblTransportProtocol;
    protected javax.swing.JLabel lblUse;
    protected javax.swing.JPanel mllpv2panel;
    protected javax.swing.JRadioButton radUseEncoded;
    protected javax.swing.JRadioButton radUseLiteral;
    protected javax.swing.JTextField txtEncoder;
    protected javax.swing.JTextField txtEndBlockChar;
    protected javax.swing.JTextField txtEndDataChar;
    protected javax.swing.JTextField txtLocation;
    protected javax.swing.JTextField txtMLLP2RetriesCount;
    protected javax.swing.JTextField txtMLLPV2DurationAckNak;
    protected javax.swing.JTextField txtMLLPv2RetryInterval;
    protected javax.swing.JTextField txtStartBlockChar;
    // End of variables declaration//GEN-END:variables

}
