package org.netbeans.modules.bpel.mapper.properties;

import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import org.openide.DialogDescriptor;

/**
 *
 * @author  anjeleevich
 */
public class AddEditNMPropertyPane extends javax.swing.JPanel {

    private Document normalDisplayNameDocument = null;
    private DialogDescriptor dialogDescriptor;
    
    private DocumentListener nmPropertyNameDocumentListener 
            = new DocumentListener()
    {
        public void insertUpdate(DocumentEvent e) {
            validateData();
        }

        public void removeUpdate(DocumentEvent e) {
            validateData();
        }

        public void changedUpdate(DocumentEvent e) {
            validateData();
        }
    };
    
    private FocusListener displayNameFocusListener 
            = new FocusListener() {

        public void focusGained(FocusEvent e) {
            displayNameTextField.setDocument(normalDisplayNameDocument);
            displayNameTextField.setForeground(nmPropertyTextField
                    .getForeground());
        }

        public void focusLost(FocusEvent e) {
            if (displayNameTextField.getText().trim().length() == 0) {
                displayNameTextField.setDocument(nmPropertyTextField
                        .getDocument());
                displayNameTextField.setForeground(DISPLAY_NAME_FOREGROUND);
            }
        }
    };
    
    
    public AddEditNMPropertyPane() {
        this(null, null);
    }
    
    /** Creates new form AddEditNMPropertyPane */
    public AddEditNMPropertyPane(String nmPropertyName, String displayName) {
        initComponents();

        if (nmPropertyName == null) {
            nmPropertyName = ""; // NOI18N
        } else {
            nmPropertyName = nmPropertyName.trim();
        }
        
        if (displayName == null) {
            displayName = ""; // NOI18N
        } else {
            displayName = displayName.trim();
        }
        
        normalDisplayNameDocument = displayNameTextField.getDocument();

        nmPropertyTextField.setText(nmPropertyName);
        
        if (displayName.length() == 0) {
            displayNameTextField.setDocument(nmPropertyTextField.getDocument());
            displayNameTextField.setForeground(DISPLAY_NAME_FOREGROUND);
        } else {
            displayNameTextField.setText(displayName);
        }
        
        nmPropertyTextField.getDocument().addDocumentListener(
                nmPropertyNameDocumentListener);
        displayNameTextField.addFocusListener(displayNameFocusListener);
    }
    
    public void setDialogDescriptor(DialogDescriptor dialogDescriptor) {
        this.dialogDescriptor = dialogDescriptor;
        validateData();
    }

    private void validateData() {
        if (dialogDescriptor != null) {
            dialogDescriptor.setValid(getNMPropeprtyName().length() > 0);
        }
    }
    
    public String getNMPropeprtyName() {
        return nmPropertyTextField.getText().trim();
    }
    
    public String getDisplayName() {
        String displayName = ""; // NOI18N
        try {
            displayName = normalDisplayNameDocument.getText(0, 
                    normalDisplayNameDocument.getLength());
        } catch (BadLocationException ex) {}
        
        return displayName.trim();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nmPropertyNameLabel = new javax.swing.JLabel();
        displayNameLabel = new javax.swing.JLabel();
        nmPropertyTextField = new javax.swing.JTextField();
        displayNameTextField = new javax.swing.JTextField();

        nmPropertyNameLabel.setLabelFor(nmPropertyTextField);
        org.openide.awt.Mnemonics.setLocalizedText(nmPropertyNameLabel, org.openide.util.NbBundle.getMessage(AddEditNMPropertyPane.class, "AddEditNMPropertyPane.nmPropertyNameLabel.text")); // NOI18N

        displayNameLabel.setLabelFor(displayNameTextField);
        org.openide.awt.Mnemonics.setLocalizedText(displayNameLabel, org.openide.util.NbBundle.getMessage(AddEditNMPropertyPane.class, "AddEditNMPropertyPane.displayNameLabel.text")); // NOI18N

        nmPropertyTextField.setText(org.openide.util.NbBundle.getMessage(AddEditNMPropertyPane.class, "AddEditNMPropertyPane.nmPropertyTextField.text")); // NOI18N
        nmPropertyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nmPropertyTextFieldActionPerformed(evt);
            }
        });

        displayNameTextField.setText(org.openide.util.NbBundle.getMessage(AddEditNMPropertyPane.class, "AddEditNMPropertyPane.displayNameTextField.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nmPropertyNameLabel)
                    .add(displayNameLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(displayNameTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .add(nmPropertyTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nmPropertyNameLabel)
                    .add(nmPropertyTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(displayNameLabel)
                    .add(displayNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void nmPropertyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmPropertyTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_nmPropertyTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel displayNameLabel;
    private javax.swing.JTextField displayNameTextField;
    private javax.swing.JLabel nmPropertyNameLabel;
    private javax.swing.JTextField nmPropertyTextField;
    // End of variables declaration//GEN-END:variables

    private static final Color DISPLAY_NAME_FOREGROUND = Color.GRAY;
}
