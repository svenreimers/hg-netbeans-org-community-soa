<definitions name="RestInboundWSDL"
    targetNamespace="http://j2ee.netbeans.org/wsdl/TestCompositeApp/RestInboundWSDL"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:rest="http://schemas.sun.com/jbi/wsdl-extensions/rest/" 
    xmlns:tns="http://j2ee.netbeans.org/wsdl/TestCompositeApp/RestInboundWSDL"
    xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
    <types/>
    <message name="anyMessage">
        <part name="part1" type="xsd:anyType"/>
    </message>
    <portType name="RestInboundPortType">
        <operation name="GetInbound">
            <input name="input1" message="tns:anyMessage"/>
            <output name="output1" message="tns:anyMessage"/>
        </operation>
    </portType>
    <binding name="RestInboundBinding" type="tns:RestInboundPortType">
        <rest:binding/>
        <operation name="GetInbound">
            <rest:operation>
<![CDATA[
# optional, name of HTTP listener to bind to, defaults to "default-listener"
http-listener-name=default-listener

# required, path to this resource
path=/some_path

# optional, HTTP verb to access the resource, defaults to GET
method=GET

# optional, acceptable MIME types for request payload, defaults to "application/json", "application/xml"
consume-types=[ "application/json", "application/xml" ]

# optional, all possible MIME types of response payload, defaults to "application/json", "application/xml"
produce-types=[ "application/json", "application/xml" ]

forward-as-attachment=false
]]>
            </rest:operation>
            <input name="input1"/>
            <output name="output1"/>
        </operation>
    </binding>
    <service name="RestInboundService">
        <port name="RestInboundWSDL_InboundPort" binding="tns:RestInboundBinding">
            <rest:address/>
        </port>
    </service>
    <plnk:partnerLinkType name="RestInboundWSDL">
        <!-- A partner link type is automatically generated when a new port type
        is added. Partner link types are used by BPEL processes.

        In a BPEL process, a partner link represents the interaction between
        the BPEL process and a partner service. Each partner link is associated
        with a partner link type.
        
        A partner link type characterizes the conversational relationship
        between two services. The partner link type can have one or two roles.-->
        <plnk:role name="RestInboundPortTypeRole" portType="tns:RestInboundPortType"/>
    </plnk:partnerLinkType>
</definitions>
